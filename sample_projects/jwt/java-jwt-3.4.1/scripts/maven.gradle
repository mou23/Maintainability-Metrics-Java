apply plugin: Auth0OSS

class Auth0OSS implements Plugin<Project> {

    void apply(Project target) {
        target.extensions.create("auth0", Auth0Extension, target)
        target.configure(target) {
            apply plugin: 'maven-publish'

            target.task("sourcesJar", type: Jar, dependsOn: classes) {
                classifier = 'sources'
                from sourceSets.main.allSource
            }
            target.task("javadocJar", type: Jar, dependsOn: javadoc) {
                classifier = 'javadoc'
                from javadoc.getDestinationDir()
            }

            artifacts {
                archives sourcesJar, javadocJar
            }

            publishing {
                publications {
                    mavenJava(MavenPublication) {
                        from components.java
                        artifact sourcesJar
                        artifact javadocJar
                        groupId project.group
                        artifactId project.name
                        version project.version
                    }
                }
            }

            publishing.publications.all {
                pom.withXml {

                    def lib = project.extensions.auth0
                    def root = asNode()

                    root.appendNode('packaging', 'jar')
                    root.appendNode('name', lib.name)
                    root.appendNode('description', lib.description)
                    root.appendNode('url', lib.url)

                    def developersNode = root.appendNode('developers')
                    project.extensions.auth0.developers.each {
                        def node = developersNode.appendNode('developer')
                        node.appendNode('id', it.id)
                        node.appendNode('name', it.name)
                        node.appendNode('email', it.email)
                    }

                    def dependenciesNode = root.appendNode('dependencies')

                    configurations.compile.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }

                    def licenceNode = root.appendNode('licenses').appendNode('license')
                    licenceNode.appendNode('name', 'The MIT License (MIT)')
                    licenceNode.appendNode('url', "https://raw.githubusercontent.com/auth0/${lib.repo}/master/LICENSE")
                    licenceNode.appendNode('distribution', 'repo')

                    def scmNode = root.appendNode('scm')
                    scmNode.appendNode('connection', "scm:git@github.com:auth0/${lib.repo}.git")
                    scmNode.appendNode('developerConnection', "scm:git@github.com:auth0/${lib.repo}.git")
                    scmNode.appendNode('url', "https://github.com/auth0/${lib.repo}")
                }
            }
        }
    }
}

class Auth0Extension {
    String name
    String repo
    String description
    String url
    List<Developer> developers = []

    private Project project

    Auth0Extension(project) {
        this.project = project
    }

    void developer(Closure<Developer> developerClosure) {
        def developer = project.configure(new Developer(), developerClosure)
        developers.add(developer)
    }
}

class Developer {
    String id
    String name
    String email
}



